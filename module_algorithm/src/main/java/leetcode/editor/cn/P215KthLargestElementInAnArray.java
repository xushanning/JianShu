//Âú®Êú™ÊéíÂ∫èÁöÑÊï∞ÁªÑ‰∏≠ÊâæÂà∞Á¨¨ k ‰∏™ÊúÄÂ§ßÁöÑÂÖÉÁ¥†„ÄÇËØ∑Ê≥®ÊÑèÔºå‰Ω†ÈúÄË¶ÅÊâæÁöÑÊòØÊï∞ÁªÑÊéíÂ∫èÂêéÁöÑÁ¨¨ k ‰∏™ÊúÄÂ§ßÁöÑÂÖÉÁ¥†ÔºåËÄå‰∏çÊòØÁ¨¨ k ‰∏™‰∏çÂêåÁöÑÂÖÉÁ¥†„ÄÇ 
//
// Á§∫‰æã 1: 
//
// ËæìÂÖ•: [3,2,1,5,6,4] Âíå k = 2
//ËæìÂá∫: 5
// 
//
// Á§∫‰æã 2: 
//
// ËæìÂÖ•: [3,2,3,1,2,4,5,5,6] Âíå k = 4
//ËæìÂá∫: 4 
//
// ËØ¥Êòé: 
//
// ‰Ω†ÂèØ‰ª•ÂÅáËÆæ k ÊÄªÊòØÊúâÊïàÁöÑÔºå‰∏î 1 ‚â§ k ‚â§ Êï∞ÁªÑÁöÑÈïøÂ∫¶„ÄÇ 
// Related Topics Â†Ü ÂàÜÊ≤ªÁÆóÊ≥ï 
// üëç 811 üëé 0


package leetcode.editor.cn;

//JavaÔºöÊï∞ÁªÑ‰∏≠ÁöÑÁ¨¨K‰∏™ÊúÄÂ§ßÂÖÉÁ¥†
public class P215KthLargestElementInAnArray {
    public static void main(String[] args) {
        Solution solution = new P215KthLargestElementInAnArray().new Solution();
        // TO TEST
    }

    //leetcode submit region begin(Prohibit modification and deletion)
    class Solution {
        private int len;
        private int[] nums;

        public int findKthLargest(int[] nums, int k) {
            len = nums.length;
            this.nums = nums;
            if (len == 0) {
                return 0;
            }
            buildHeap();
            for (int i = nums.length - 1; i >= nums.length - k + 1; i--) {
                swap(i, 0);
                len--;
                heapify(0);
            }

            return nums[0];
        }

        private void buildHeap() {
            //Ê≥®ÊÑèÁÇπ‚ë†
            for (int i = len / 2 - 1; i >= 0; i--) {
                heapify(i);
            }
        }

        private void heapify(int i) {
            int max = i;
            int left = 2 * i + 1;
            int right = 2 * i + 2;
            //Ê≥®ÊÑèÁÇπ‚ë°
            if (left < len && nums[left] > nums[max]) {
                max = left;
            }
            if (right < len && nums[right] > nums[max]) {
                max = right;
            }
            if (max != i) {
                swap(max, i);
                heapify(max);
            }
        }

        private void swap(int i, int j) {
            int temp = nums[i];
            nums[i] = nums[j];
            nums[j] = temp;
        }
    }
//leetcode submit region end(Prohibit modification and deletion)

}
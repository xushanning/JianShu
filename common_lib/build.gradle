apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.github.ben-manes.versions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        android.defaultConfig.vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding = true
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

def kaptDependencies = rootProject.ext.kaptDependencies
def apiDependencies = rootProject.ext.dependencies
def debugDependencies = rootProject.ext.debugDependencies
def testDependencies = rootProject.ext.testDependencies

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    apiDependencies.each { k, v ->
        api v
    }

    kaptDependencies.each { k, v ->
        kapt v
    }

    debugDependencies.each { k, v ->
        debugApi v
    }

    testDependencies.each { k, v ->
        testApi v
    }
    androidTestDependencies.each { k, v ->
        androidTestApi v
    }


}
